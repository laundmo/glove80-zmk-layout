/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>

/* Include all behaviour includes needed by system behaviors/macros */
/* Include behaviour includes needed by key binds - automatically generated */

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    /* Glove80 system behavior & macros */

    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 2>,
                <&to 1>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };
        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };
        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings =
            <&mo>,
            <&rgb_ug_status_macro>;
    };

    /* Custom Defined Behaviors */
    /* Automatically generated keymap */

    combos {
        compatible = "zmk,combos";
        combo_f11 {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp F11>;
        };
        combo_f12 {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp F12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
    &kp F1    &kp F2   &kp F3    &kp F4     &kp F5                                                                                       &kp F6     &kp F7    &kp F8    &kp F9    &kp F10
 &kp EQUAL    &kp N1   &kp N2    &kp N3     &kp N4  &kp N5                                                                       &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp ESC     &kp Q    &kp W     &kp E      &kp R   &kp T                                                                        &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp TAB     &kp A    &kp S     &kp D      &kp F   &kp G                                                                        &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp GRAVE     &kp Z    &kp X     &kp C      &kp V   &kp B  &kp LSHFT      &kp LCTRL  &kp LGUI    &lower    &kp RCTRL   &kp RSHFT   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp PG_UP
&magic 3 0  &kp HOME  &kp END  &kp LEFT  &kp RIGHT          &kp SPACE  &kp BACKSPACE  &kp LALT  &kp RALT    &kp RET  &kp DELETE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };

        gaming {
            bindings = <
          &trans        &trans        &trans        &trans        &trans                                                                  &trans  &trans  &trans  &trans  &trans
          &trans        &trans        &trans        &trans        &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
          &trans        &trans        &trans        &trans        &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
          &trans        &trans        &trans        &trans        &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
      &kp LSHIFT        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp NUMBER_9  &kp NUMBER_8  &kp NUMBER_7  &kp NUMBER_6          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        more_mods {
            bindings = <
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                                                                  &kp F16  &kp F17  &kp F18  &kp F19  &kp F20
 &trans   &trans   &trans   &trans   &trans  &trans                                                  &trans   &trans   &trans   &trans   &trans   &trans
 &trans   &trans   &trans   &trans   &trans  &trans                                                  &trans   &trans   &trans   &trans   &trans   &trans
 &trans   &trans   &trans   &trans   &trans  &trans                                                  &trans   &trans   &trans   &trans   &trans   &trans
 &trans   &trans   &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans   &trans   &trans
 &trans   &trans   &trans   &trans   &trans          &trans  &trans  &trans  &trans  &trans  &trans           &trans   &trans   &trans   &trans   &trans
            >;
        };

        layer_Magic {
            bindings = <
 &bt BT_CLR            &none            &none            &none            &none                                                                           &none  &none  &none  &none  &bt BT_CLR_ALL
      &none            &none            &none            &none            &none            &none                                                   &none  &none  &none  &none  &none           &none
     &trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none           &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none     &bootloader
     &reset            &none            &none            &none            &none            &none  &bt_2  &bt_3         &none  &none  &none  &none  &none  &none  &none  &none  &none          &reset
      &none            &none            &none            &none            &none                   &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none           &none
            >;
        };
    };
};
